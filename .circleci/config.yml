version: 2.1
executors:
  node:
    docker:
      - image: 'circleci/node:9.8.0'
    shell: /bin/bash
    working_directory: ~/app
   
orbs:
  docker-publish: circleci/docker-publish@0.1.4

jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-
      - run:
          name: Install Node.js dependencies with Npm
          command: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: ~/app
          paths:
            - .

  test:
    executor: node
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Start to test using rp http
          command: npm start
      - run:
          name: Test
          command: npm test
      - run:
          name: Test coverage
          command: |
            npm run test-coverage
          when: always
      - store_test_results:
          path: ~/coverage
      - store_artifacts:
          path: ~/coverage
  
  publish:
      executor: node
      steps:
        - attach_workspace:
            at: ~/app
        - setup_remote_docker
        - docker-publish/check # DOCKER_LOGIN & DOCKER_PASSWORD need to be set as environment variable under a context of circleci.com.
        - docker-publish/build: # It would build the docker image from Dockerfile.
            tag: latest
        - docker-publish/deploy # It would publish the images to docker hub.

  deploy:
      executor: node
      steps:
        - attach_workspace:
            at: ~/app
        - setup_remote_docker
        - run:
            name: Deploy
            command: |
              sh ./.circleci/deploy.sh
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only: master